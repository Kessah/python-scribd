<pre>
class *VirtualUser*([User]) 
    Provides an easy way to implement virtual users within the current 
    Scribd API account. 
     
    This is useful if Scribd is used as a backend for a platform with its 
    own user authentication system. 
     
    Virtual users are created just by instantiating this class passing the 
    name of the virtual user to the constructor. This will most probably 
    by the name used by your own authentication system. 
     
    Because this is a subclass of the User class, the virtual users provide 
    the same set of operations (except get`_`autologin`_`url()) as normal users. 
     
    Resource attributes: 
      None. 
     
    Method resolution order: 
        [VirtualUser] 
        [User] 
        [Resource] 
        object 
     
    Methods defined here: 
     
    *get`_`autologin`_`url*(self, next`_`path='') 
        This method is not supported by virtual users. 
     
    ---------------------------------------------------------------------- 
    Methods inherited from [User]: 
     
    *all*(self, **kwargs) 
        Returns a list of all user documents. 
         
        Parameters: 
          Refer to the "Parameters" section of: 
          http://www.scribd.com/developers/api?method`_`name=docs.getList 
           
          Parameters "api`_`key", "api`_`sig", "session`_`key", "my`_`user`_`id" 
          are managed internally by the library. 
     
    *find*(self, query, **kwargs) 
        Searches for documents and returns a list of them. 
         
        Parameters: 
          Refer to the "Parameters" section of: 
          http://www.scribd.com/developers/api?method`_`name=docs.search 
           
          Parameters "api`_`key", "api`_`sig", "session`_`key", "my`_`user`_`id" 
          are managed internally by the library. 
         
          Parameter "num`_`start" is not supported. 
          Parameter "num`_`results" is not supported. 
           
        Additional parameters: 
          offset 
            (optional) The offset into the list of documents. 
          limit 
            (optional) The number of documents to return 
            (default 10, max 1000). 
         
        Note on the "scope" parameter: 
          Only if scope=='user', the returned documents will have the 
          owner attribute set to this user object. Otherwise it will be 
          the scribd.api`_`user which will impact the ability to change 
          the document's properties. You may set the owner attributes 
          later if you have can determine the documents owner yourself. 
          Refer to the Document class for operations requiring a proper 
          owner object. 
     
    *get*(self, doc`_`id) 
        Returns a document with the specified id. 
         
        Parameters: 
          doc`_`id 
            (required) Identifier of the document to be returned. 
            The user has to be the owner of this document. 
     
    *upload*(self, file, **kwargs) 
        Uploads a new document and returns a document object. 
         
        Parameters: 
          Refer to the "Parameters" section of: 
          http://www.scribd.com/developers/api?method`_`name=docs.upload 
         
          Parameters "api`_`key", "api`_`sig", "session`_`key", "my`_`user`_`id" 
          are managed internally by the library. 
         
          Parameter "file" has a different meaning: 
           
          file 
            (required) File to upload. Either a file-alike object or an URL 
            string. If set to an URL, the file is uploaded from that URL. 
            If set to a file object, the file is loaded into memory using the 
            read() method and uploaded. The name of the file is obtained from 
            the "name" attribute. 
     
    *xall*(self, **kwargs) 
        Similar to all() method but returns a generator object 
        iterating over all user documents. 
         
        Parameters: 
          Refer to the "Parameters" section of: 
          http://www.scribd.com/developers/api?method`_`name=docs.getList 
         
          Parameters "api`_`key", "api`_`sig", "session`_`key", "my`_`user`_`id" 
          are managed internally by the library. 
         
          Parameter "limit" is not supported. 
           
        Additional parameters: 
          page`_`size 
            (optional) The number of documents acquired by a single API 
            call. The generator repeats the calls until all documents are 
            returned. 
         
        Note. If you're not interested in all documents (currently there 
        may be max. 1000 of them), just stop iterating the generator object. 
     
    *xfind*(self, query, **kwargs) 
        Similar to find() method but returns a generator object searching 
        for documents and iterating over them. 
         
        Parameters: 
          Refer to the "Parameters" section of: 
          http://www.scribd.com/developers/api?method`_`name=docs.search 
           
          Parameters "api`_`key", "api`_`sig", "session`_`key", "my`_`user`_`id" 
          are managed internally by the library. 
         
          Parameter "num`_`start" is not supported. 
          Parameter "num`_`results" is not supported. 
           
        Additional parameters: 
          offset 
            (optional) The offset into the list of documents. 
          page`_`size 
            (optional) The number of documents acquired by a single API 
            call. The calls are repeated until all documents are returned. 
         
        Note. If you're not interested in all documents (currently there 
        may be max. 1000 of them), just stop iterating the generator object. 
     
    ---------------------------------------------------------------------- 
    Methods inherited from [Resource]: 
     
    *get`_`attributes*(self) 
        Returns a dictionary with the resource attributes. </pre>