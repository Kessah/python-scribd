<pre>
class *VirtualUser*([User]) 
    Provides an easy way to implement virtual users within the current 
    Scribd API account. 
     
    This is useful if Scribd is used as a backend for a platform with its 
    own user authentication system. 
     
    Virtual users are also used to control access to the embedded documents 
    when using iPaper Secure. For more info about iPaper Secure visit: 
    http://www.scribd.com/publisher/ipaper_secure 
     
    Virtual users are created just by instantiating this class passing the 
    name of the virtual user to the constructor. This will most probably 
    be the name used by your own authentication system. 
     
    Because this is a subclass of the [User] class, the virtual users provide 
    the same set of operations (except get_autologin_url()) as normal users. 
     
    Resource attributes: 
      None. 
     
    Method resolution order: 
        VirtualUser 
        [User] 
        [Resource] 
        object 
     
    Methods defined here: 
     
    *`_``_`init`_``_`*(self, my_user_id) 
        Instantiates a new object. 
         
        Parameters: 
          my_user_id 
            Name of the virtual user. Every time an object is created 
            with the same name, it will refer to the same virtual user. 
     
    *get_access_list*(self) 
        This method can be used for tracking and verification purposes. 
        It returns a list of the secure documents that this virtual user is 
        currently allowed to access. 
         
        Note that calling [Document].set_access() will not insert a document 
        into this list (though it can remove one) - that can only be done with 
        the user viewing an active embed code. 
         
        Returns: 
            A list of [Document] objects. 
         
        This method is part of iPaper Secure. For more info about iPaper Secure visit: 
        http://www.scribd.com/publisher/ipaper_secure 
     
    *get_autologin_url*(self, next_path='') 
        This method is not supported by virtual users. 
     
    *set_access*(self, allowed) 
        This method allows you to disable a user's access to secure documents, 
        or to re-enable it after a previous call. It is not necessary to grant 
        initial access to documents - that is done through the embed code. 
         
        Parameters: 
          allowed 
            If False, disables access. If True, re-enables access. 
         
        This method is part of iPaper Secure. For more info about iPaper Secure visit: 
        http://www.scribd.com/publisher/ipaper_secure 
     
    ---------------------------------------------------------------------- 
    Methods inherited from [User]: 
     
    *all*(self, `*``*`kwargs) 
        Returns a list of all user documents. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getList 
           
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. 
           
        Returns: 
            A list of [Document] objects. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getList 
            for a list of document's initial resource attributes. 
     
    *find*(self, query, `*``*`kwargs) 
        Searches for documents and returns a list of them. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.search 
           
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. Parameter "num_start" is not 
            supported. Parameter "num_results" is not supported. 
           
        Additional parameters: 
          offset 
            (optional) The offset into the list of documents. 
          limit 
            (optional) The number of documents to return 
            (default 10, max 1000). 
         
        Note on the "scope" parameter: 
            Only if scope=='user', the returned documents will have the 
            owner attribute set to this user object. Otherwise it will be 
            the scribd.api_user which will impact the ability to change 
            the document's properties. You may set the owner attributes 
            later if you have can determine the documents owner yourself. 
            Refer to the [Document] class for operations requiring a proper 
            owner object. 
         
        Returns: 
            A list of [Document] objects. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.search 
            for a list of document's initial resource attributes. 
     
    *get*(self, doc_id) 
        Returns a document with the specified id. 
         
        Parameters: 
          doc_id 
            (required) Identifier of the document to be returned. 
            The user has to be the owner of this document. 
         
        Returns: 
            A [Document] object. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getSettings 
            for a list of document's initial resource attributes. 
     
    *upload*(self, file, name=None, `*``*`kwargs) 
        Uploads a file as a new document and returns the corresponding 
        [Document] object. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.upload 
         
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. Parameter "file" is 
            documented below. 
         
          file 
            (required) File-alike object to upload. The file is loaded 
            into memory using the read() method and uploaded. 
          name 
            (optional) Name of the file. Either a full path or just the 
            name. Only the name is used. Does not have to point to an 
            existing file. If None, the name will be read from the "name" 
            attribute of the file object (objects created using the open() 
            built-in function provide this attribute). 
         
        Returns: 
            A [Document] object. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.upload 
            for a list of document's initial resource attributes. 
     
    *upload_from_url*(self, url, `*``*`kwargs) 
        Uploads a file from a remote URL as a new document and returns 
        the corresponding document object. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.upload 
         
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. Parameter "file" is not 
            supported. 
         
          url 
            (required) A URL of the document to upload. 
         
        Returns: 
            A [Document] object. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.upload 
            for a list of document's initial resource attributes. 
     
    *xall*(self, `*``*`kwargs) 
        Similar to all() method but returns a generator object 
        iterating over all user documents. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getList 
         
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. Parameter "limit" is not 
            supported. 
           
        Additional parameters: 
          page_size 
            (optional) The number of documents acquired by a single API 
            call. The generator repeats the calls until all documents are 
            returned. Defaults to 100. 
         
        Returns: 
            A generator object yielding [Document] objects. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getList 
            for a list of document's initial resource attributes. 
         
        Note. If you're not interested in all documents (currently there 
        may be max. 1000 of them), just stop iterating the generator object. 
     
    *xfind*(self, query, `*``*`kwargs) 
        Similar to find() method but returns a generator object searching 
        for documents and iterating over them. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.search 
           
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id" 
            are managed internally by the library. Parameter "num_start" is not 
            supported. Parameter "num_results" is not supported. 
           
        Additional parameters: 
          offset 
            (optional) The offset into the list of documents. 
          page_size 
            (optional) The number of documents acquired by a single API 
            call. The calls are repeated until all documents are returned. 
         
        Returns: 
            A generator object yielding [Document] objects. 
         
            Refer to "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.search 
            for a list of document's initial resource attributes. 
         
        Note. If you're not interested in all documents (currently there 
        may be max. 1000 of them), just stop iterating the generator object. 
     
    ---------------------------------------------------------------------- 
    Methods inherited from [Resource]: 
     
    *get_attributes*(self) 
        Returns a dictionary with the resource attributes. </pre>