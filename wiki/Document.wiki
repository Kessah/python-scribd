<pre>
class *Document*([Resource]) 
    Represents a Scribd document. 
     
    Use methods of the [User] objects to instantiate. 
     
    Attributes: 
      owner 
        A [User] object owning the document. This always is a valid 
        object but may not be the true owner of the document if it could 
        not be determined. This may be the case if the document was obtained 
        from find() or xfind() function/method. In the worst case, the owner 
        will be set to the scribd.api_user object which is the default user 
        associated with the current API account. 
         
        You may set this attribute if you can determine the true owner 
        yourself. 
         
        Refer to the object methods documentation to learn which ones 
        require a true owner to be set. 
     
    Resource attributes: 
        The initial set of the attributes depend on how this object 
        was obtained. 
     
        Refer to "Result explanation" section of: 
        http://www.scribd.com/developers/api?method_name=docs.getList 
        if the object was obtained by the [User] object's all() or 
        xall() methods. 
       
        Refer to "Result explanation" section of: 
        http://www.scribd.com/developers/api?method_name=docs.search 
        if the object was obtained by find() or xfind() (either global 
        functions or [User] object's methods). 
       
        Refer to "Result explanation" section of: 
        http://www.scribd.com/developers/api?method_name=docs.upload 
        if the object was obtained by one of the [User] object's 
        uploads methods. 
     
        Refer to "Result explanation" section of: 
        http://www.scribd.com/developers/api?method_name=docs.getSettings 
        if the object was obtained by the [User] object's get() method. 
     
        If the owner attribute points to a true owner of the document, 
        the load() method may be used to obtain a full set of resource 
        attributes. For more information refer to the load() method 
        documentation. 
     
    Method resolution order: 
        Document 
        [Resource] 
        object 
     
    Methods defined here: 
     
    *delete*(self) 
        Deletes the document from Scribd platform. 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *get_access_list*(self) 
        This method can be used for tracking and verification purposes. It returns 
        a list of virtual users currently authorized to view this secure document. 
         
        Returns: 
            A list of [VirtualUser] objects. 
         
        This method is part of iPaper Secure. For more info about iPaper Secure visit: 
        http://www.scribd.com/publisher/ipaper_secure 
     
    *get_conversion_status*(self) 
        Obtains and returns the document current conversion status. 
         
        Returns: 
            A string. Refer to the "Result explanation" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getConversionStatus 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *get_download_url*(self, doc_type='original') 
        Returns a link that can be used to download a static version of the 
        document. 
         
        Parameters: 
            Refer to the "Parameters" section of: 
            http://www.scribd.com/developers/api?method_name=docs.getDownloadUrl 
         
            Note. Parameters "api_key", "api_sig", "session_key", "my_user_id", 
            "doc_id" are managed internally by the library. 
           
        Returns: 
            An URL (string). 
     
    *get_scribd_url*(self) 
        Returns a link to the document's page on scribd.com. 
         
        Works for private documents too by adding the secret 
        password to the link. May call the load() method to 
        obtain the secret password. 
     
    *load*(self) 
        Retrieves the detailed meta-data for this document and updates 
        object's resource attributes. 
         
        Refer to the "Result explanation" section of: 
        http://www.scribd.com/developers/api?method_name=docs.getSettings 
        for the names and descriptions of the resource attributes. 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *replace*(self, file, name=None, `*``*`kwargs) 
        Uploads a new file in place of the current document. All 
        resource attributes including doc_id remain intact. 
         
        Parameters: 
            Refer to the [User].upload() method. 
           
            Note. Parameter "rev_id" is managed internally by the library. 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *replace_from_url*(self, url, `*``*`kwargs) 
        Uploads a new file from a remote URL in place of the current 
        document. All resource attributes including doc_id remain intact. 
         
        Parameters: 
            Refer to the [User].upload_from_url() method. 
         
            Note. Parameter "rev_id" is managed internally by the library. 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *save*(self) 
        Saves the changed object's resource attributes. 
         
        Has to be called after a resource attribute has been altered 
        to make the change permanent. 
         
        Refer to the "Parameters" section of: 
        http://www.scribd.com/developers/api?method_name=docs.changeSettings 
        for the names and descriptions of the resource attributes 
        that are saved by this call. 
         
        Requires the document owner to be the user that uploaded this 
        document. 
     
    *set_access*(self, user, allowed) 
        This method allows you to disable a virtual user's access to this secure 
        document, or to re-enable it after a previous call. It is not necessary nor 
        possible to grant initial access to a document using this call - that is done 
        through the embed code. 
         
        Parameters: 
          user 
            Virtual user's name or [VirtualUser] object. 
          allowed 
            If False, disables access. If True, re-enables access. 
         
        This method is part of iPaper Secure. For more info about iPaper Secure visit: 
        http://www.scribd.com/publisher/ipaper_secure 
     
    ---------------------------------------------------------------------- 
    Methods inherited from [Resource]: 
     
    *get_attributes*(self) 
        Returns a dictionary with the resource attributes. </pre>